extend type Query {
    "Find a single user by an identifying attribute."
    user(
        "Search by primary key."
        id: ID @eq @rules(apply: ["prohibits:email", "required_without:email"])

        "Search by email address."
        email: String
            @eq
            @rules(apply: ["prohibits:id", "required_without:id", "email"])
    ): User @find

    "List multiple users."
    users(
        "Filters by name. Accepts SQL LIKE wildcards `%` and `_`."
        name: String @where(operator: "like")
    ): [User!]! @paginate(defaultCount: 10)
}

extend type Mutation {
    createUser(
        "The user's name."
        name: String! @rules(apply: ["required"])

        "The user's email address."
        email: String! @rules(apply: ["required", "email"])

        "The user's password."
        password: String! @rules(apply: ["required", "min:8"])
    ): User @create
}
